// Canvas variables
const canvas = document.querySelector('#canvas');
const ctx = canvas.getContext('2d');
const canvasWidth = canvas.width;
const canvasHeight = canvas.height;

// Ball variables
let ballRadius = 10;
let ballX = canvasWidth / 2;
let ballY = canvasHeight - 30;
let ballSpeedX = 3;
let ballSpeedY = -3;

// Paddle variables
let paddleWidth = 75;
let paddleHeight = 10;
let paddleX = (canvasWidth - paddleWidth) / 2;
let paddleSpeed = 7;

// Brick variables
let brickRowCount = 3;
let brickColumnCount = 5;
let brickWidth = 75;
let brickHeight = 20;
let brickPadding = 10;
let brickOffsetTop = 30;
let brickOffsetLeft = 30;
let bricks = [];
for (let c = 0; c < brickColumnCount; c++) {
  bricks[c] = [];
  for (let r = 0; r < brickRowCount; r++) {
    bricks[c][r] = { x: 0, y: 0, status: 1 };
  }
}

// Game variables
let score = 0;
let lives = 3;
let gameRunning = true;

// Keyboard event listeners
document.addEventListener('keydown', (event) => {
  if (event.key === 'ArrowLeft') {
    paddleSpeed = -7;
  } else if (event.key === 'ArrowRight') {
    paddleSpeed = 7;
  }
});

document.addEventListener('keyup', (event) => {
  if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {
    paddleSpeed = 0;
  }
});

// Collision detection functions
function detectBallWallCollision() {
  if (ballX + ballSpeedX > canvasWidth - ballRadius || ballX + ballSpeedX < ballRadius) {
    ballSpeedX = -ballSpeedX;
  }
  if (ballY + ballSpeedY < ballRadius) {
    ballSpeedY = -ballSpeedY;
  } else if (ballY + ballSpeedY > canvasHeight - ballRadius) {
    if (ballX > paddleX && ballX < paddleX + paddleWidth) {
      ballSpeedY = -ballSpeedY;
    } else {
      lives--;
      if (lives === 0) {
        gameRunning = false;
        alert('Game over!');
      } else {
        ballX = canvasWidth / 2;
        ballY = canvasHeight - 30;
        ballSpeedX = 3;
        ballSpeedY = -3;
        paddleX = (canvasWidth - paddleWidth) / 2;
      }
    }
  }
}

function detectBallPaddleCollision() {
  if (ballY + ballSpeedY > canvasHeight - ballRadius - paddleHeight &&
      ballX > paddleX && ballX < paddleX + paddleWidth) {
    ballSpeedY = -ballSpeedY;
    let diff = ballX - (paddleX + paddleWidth / 2);
    ballSpeedX = diff / (paddleWidth / 2) * 3;
  }
}

function detectBallBrickCollision() {
  for (let c = 0; c < brickColumnCount; c++) {
    for (let r = 0; r < brickRowCount; r++) {
      let brick = bricks[c][r];
      if (brick.status === 1) {
        if (ballX > brick.x && ballX < brick.x + brickWidth && ballY > brick.y && ballY < brick.y + brickHeight) {
          ballSpeedY = -ballSpeedY;
          brick.status = 0;
          score++;
          if (score === brickRowCount * brickColumnCount) {
            gameRunning = false;
            alert('You win!');
          }
        }
      }
    }
  }
}

// Draw functions
function drawBall() {
  ctx.beginPath();
  ctx.arc(ballX, ballY, ballRadius, 0, Math.PI*2);
  ctx.fillStyle = '#fff';
  ctx.fill();
  ctx.closePath();
}

function drawPaddle() {
  ctx.beginPath();
  ctx.rect(paddleX, canvasHeight - paddleHeight, paddleWidth, paddleHeight);
  ctx.fillStyle = '#fff';
  ctx.fill();
  ctx.closePath();
}

function drawBricks() {
  for (let c = 0; c < brickColumnCount; c++) {
    for (let r = 0; r < brickRowCount; r++) {
      if (bricks[c][r].status === 1) {
        let brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;
        let brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;
        bricks[c][r].x = brickX;
        bricks[c][r].y = brickY;
        ctx.beginPath();
        ctx.rect(brickX, brickY, brickWidth, brickHeight);
        ctx.fillStyle = '#fff';
        ctx.fill();
        ctx.closePath();
      }
    }
  }
}

function drawScore() {
  ctx.font = '16px Arial';
  ctx.fillStyle = '#fff';
  ctx.fillText('Score: ' + score, 10, 20);
}

function drawLives() {
  ctx.font = '16px Arial';
  ctx.fillStyle = '#fff';
  ctx.fillText('Lives: ' + lives, canvasWidth - 70, 20);
}

// Main game loop
function gameLoop() {
  if (gameRunning) {
    ctx.clearRect(0, 0, canvasWidth, canvasHeight);
    drawBricks();
    drawBall();
    drawPaddle();
    drawScore();
    drawLives();
    detectBallWallCollision();
    detectBallPaddleCollision();
    detectBallBrickCollision();
    ballX += ballSpeedX;
    ballY += ballSpeedY;
    paddleX += paddleSpeed;
    if (paddleX < 0) {
      paddleX = 0;
    } else if (paddleX > canvasWidth - paddleWidth) {
      paddleX = canvasWidth - paddleWidth;
    }
    requestAnimationFrame(gameLoop);
  }
}

// Start game
gameLoop();