import pygame

# Initialize Pygame library
pygame.init()

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Set screen dimensions
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

# Set clock
clock = pygame.time.Clock()

# Set font
font = pygame.font.Font(None, 36)

# Set player vars
player1_score = 0
player2_score = 0
player1_pos = [50, SCREEN_HEIGHT / 2 - 50]
player2_pos = [SCREEN_WIDTH - 50, SCREEN_HEIGHT / 2 - 50]
player1_speed = 0
player2_speed = 0
player_width = 20
player_height = 100

# Set ball vars
ball_x = SCREEN_WIDTH / 2
ball_y = SCREEN_HEIGHT / 2
ball_speed_x = 3
ball_speed_y = 3
ball_width = 20
ball_height = 20

# Set game loop boolean
game_over = False

# Main game loop
while not game_over:

  # --- Event processing ---
  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      game_over = True
    if event.type == pygame.KEYDOWN:
      if event.key == pygame.K_UP:
        player2_speed -= 5
      if event.key == pygame.K_DOWN:
        player2_speed += 5
      if event.key == pygame.K_w:
        player1_speed -= 5
      if event.key == pygame.K_s:
        player1_speed += 5
    if event.type == pygame.KEYUP:
      if event.key == pygame.K_UP:
        player2_speed += 5
      if event.key == pygame.K_DOWN:
        player2_speed -= 5
      if event.key == pygame.K_w:
        player1_speed += 5
      if event.key == pygame.K_s:
        player1_speed -= 5

  # --- Game logic ---

  # Move players
  player1_pos[1] += player1_speed
  player2_pos[1] += player2_speed

  # Keep players on screen
  if player1_pos[1] < 0:
    player1_pos[1] = 0
  elif player1_pos[1] > SCREEN_HEIGHT - player_height:
    player1_pos[1] = SCREEN_HEIGHT - player_height
  if player2_pos[1] < 0:
    player2_pos[1] = 0
  elif player2_pos[1] > SCREEN_HEIGHT - player_height:
    player2_pos[1] = SCREEN_HEIGHT - player_height
  
  # Move ball
  ball_x += ball_speed_x
  ball_y += ball_speed_y
  
  # Check for collisions with walls
  if ball_y <= 0 or ball_y >= SCREEN_HEIGHT - ball_height:
    ball_speed_y = -ball_speed_y
  
  # Check for collisions with players
  if ball_x <= player1_pos[0] + player_width and ball_y >= player1_pos[1] and ball_y <= player1_pos[1] + player_height:
    ball_speed_x = -ball_speed_x
  if ball_x >= player2_pos[0] and ball_y >= player2_pos[1] and ball_y <= player2_pos[1] + player_height:
    ball_speed_x = -ball_speed_x
  
  # Check if ball goes past players
  if ball_x < 0:
    player2_score += 1
    ball_x = SCREEN_WIDTH / 2
    ball_y = SCREEN_HEIGHT / 2
  elif ball_x > SCREEN_WIDTH:
    player1_score += 1
    ball_x = SCREEN_WIDTH / 2
    ball_y = SCREEN_HEIGHT / 2
    ball_speed_x = -ball_speed_x

  # --- Drawing code ---

  # Clear the screen
  screen.fill(BLACK)
  
  # Draw players
  pygame.draw.rect(screen, WHITE, (player1_pos[0], player1_pos[1], player_width, player_height))
  pygame.draw.rect(screen, WHITE, (player2_pos[0], player2_pos[1], player_width, player_height))
  
  # Draw ball
  pygame.draw.rect(screen, WHITE, (ball_x, ball_y, ball_width, ball_height))
  
  # Draw scores
  player1_text = font.render("Player 1: {}".format(player1_score), True, WHITE)
  player2_text = font.render("Player 2: {}".format(player2_score), True, WHITE)
  screen.blit(player1_text, (50, 50))
  screen.blit(player2_text, (SCREEN_WIDTH - 200, 50))

  # Update the screen
  pygame.display.flip()

  # Tick clock
  clock.tick(60)

# Quit Pygame
pygame.quit()
